#!/bin/bash

##############################################################################################
# Check that environment vars have been set properly and we're running on a supported machine
#############################################################################################

if [ -z "$TIGRESS_HOME" ]
then
   echo "[[Tigress]] Please set the TIGRESS_HOME environment variable to the directory of the version of Tigress that you want to run."
   echo "[[Tigress]]   For example:"
   echo "[[Tigress]]      $ export TIGRESS_HOME=/home/alice/bin/tigress/3.0"
   echo "[[Tigress]]   Also make sure that this directory is on your PATH:"
   echo '[[Tigress]]      $ echo $PATH'
   echo "[[Tigress]]      /usr/bin:/usr/local/bin:.../home/alice/bin/tigress/3.0:..."
   exit -1
fi

##############################################################################################
# Check architecture and operating system
#############################################################################################
uname_s=`uname -s`
uname_m=`uname -m`

case $uname_s in
     Darwin)
        OPTIONS="-fgnu89-inline -Wno-builtin-requires-header"
        ;;
     Linux)
        ;;
     *)
        echo "[[Tigress]] 'uname -s' returned $uname_s. Tigress has been tested only on Darwin and Linux."
        exit -1
        ;;
esac

# See https://en.wikipedia.org/wiki/Uname
case $uname_m in
     i386|i686|x86)
        echo "[[Tigress]] Tigress only runs on 64-bit machines. 'uname -m' returned $uname_m which indicates you are running on a 32-bit machine."
        echo "[[Tigress]]    You can, however, cross-compile, running Tigress on a 64-bit machine and generate code for a 32-bit architecture."
        exit -1
        ;;
     x86_64|amd64|i686-64)
        ARCH=x86_64
        ;;
     armv6l)
        # We're hoping v6 code will run on v7.
        ARCH=armv7
        ;;
     armv7l|armv7|armel|armv7l|arm)
        ARCH=armv7
        ;;
     armv8l|armv8|arm64|aarch64_be|aarch64|armv8b|armv8l)
        ARCH=armv8
        # We're hoping v8 code will run on v7.
        ARCH=armv7
        ;;
     *)
        echo "[[Tigress]] 'uname -m' returned $uname_m. This is an architecture I don't recognize."
        echo "[[Tigress]]    Tigress only runs on x86_64 and armv7 architectures. If you're running on"
        echo "[[Tigress]]    one of these architectures but your 'uname -m' returns some exotic string,"
        echo "[[Tigress]]    you can edit the tigress script at $TIGRESS_HOME/tigress." 
        exit -1
        ;;
esac

bin_dir=$TIGRESS_HOME/$uname_s"-"$ARCH

########################################################################################
# Help
########################################################################################
if [ "$1" == "--help" ] || [ "$1" == "--h" ] || [ "$1" == "-h" ] || [ "$1" == "-help" ] || [ -z "$1" ]
then
cat <<"End-of-message"
Tigress is invoked like this:

tigress    --Environment=ENV \
           --Transform=TRANSFORM --Functions=IDENTSPEC [EXTRA_OPTS...] \ # First transformation
           --Transform=TRANSFORM --Functions=IDENTSPEC [EXTRA_OPTS...] \ # Second transformation
                      ....
           --Transform=TRANSFORM --Functions=IDENTSPEC [EXTRA_OPTS...] \ # Last transformation
           --out=OUTFILE.c FILE.c                                      \ # Output and input files
        
         where ENV is one of
             x86_64:Linux:Gcc:4.6
             x86_64:Darwin:Clang:5.1
             armv7:Linux:Gcc:4.6
             armv8:Linux:Gcc:4.6

This is a typical, simple, invocation:

tigress  --Environment=ENV \
        --Transform=InitOpaque   --Functions=main \                   # First transformation
        --Transform=UpdateOpaque --Functions=f \                      # Second transformation
        --Transform=AddOpaque    --Functions=f --AddOpaqueCount=2 \   # Third transformation
        --out=x.c simple1.c                                           # Output and input file

Note that Tigress accepts exactly one C file as input. If your project has
multiple files you must first merge them together into one: 

$TIGRESS_HOME/cilly --merge -c x1.c -o x1.o
$TIGRESS_HOME/cilly --merge -c x2.c -o x2.o
$TIGRESS_HOME/cilly --merge -c x3.c -o x4.o
$TIGRESS_HOME/cilly --merge  --keepmerged x1.o x2.o x3.o -o merged --mergedout=merged.c 

The first three commands are replacements, essentially, for 
compiling each of the source file. If, for example, 
you need  to pass different options when compiling the
different files, you'd do it here. The merged source file merged.c
can subsequently be passed to Tigress for transformation. See 
http://kerneis.github.io/cil/doc/html/cil/merger.html#sec-merger
to learn more about the merging process. 

Useful commands:
   *) tigress --help     : Show this message
   *) tigress --install  : Show how to install Tigress 
   *) tigress --test     : Show how to run tests to ensure proper installation 
   *) tigress --options  : Show complete list of options to tigress
   *) tigress --license  : Display the tigress license
   *) tigress --bugs     : How to get past some known issues
   *) tigress --bytecode : Run ocaml bytecode instead of native code; useful for debugging
   *) tigress --version  : Show the current Tigress version
   *) tigress --initjit  : Initialize the jitter without actually transforming anything.
End-of-message

   exit 0
fi


########################################################################################
# License
########################################################################################
if [ "$1" == "--license" ] || [ "$1" == "--License" ] || [ "$1" == "-license" ] || [ "$1" == "-License" ]
then
cat <<End-of-message
End-User License Agreement

PROGRAM: Tigress University of Arizona Tech Transfer File: UA14-135

IMPORTANT – READ CAREFULLY: This Agreement is a legal agreement
between ("LICENSEE") (defined below in Paragraph 2) and The Arizona
Board of Regents on behalf of the University of Arizona,
("ARIZONA"). By installing, copying, downloading, accessing or
otherwise using the PROGRAM, LICENSEE agrees to be bound by the terms
of this Agreement. If LICENSEE does not agree with the terms of this
Agreement, do not install, access or use the PROGRAM.

BACKGROUND

1. The University of Arizona through its Computer Science Department
has developed a proprietary software application and related
documentation, known as Tigress, a virtualizer for the C computer
language that provides computer defenses against de-virtualization
attacks, and further defined in ARIZONA Tech Transfer Arizona file
UA14-135, (hereinafter referred to as "PROGRAM").

2. LICENSEE is either: (i) yourself if you accept the Agreement; or
(ii) the legal entity you are authorized to represent in accepting
this Agreement.  You represent you have the authority to bind LICENSEE
to this Agreement.

3. LICENSEE desires to obtain and ARIZONA, consistent with its mission
of education and research, desires to grant a license to access and
use PROGRAM subject to the terms and conditions set forth below.

The parties therefore agree as follows:

I.  LICENSE ARIZONA hereby grants to LICENSEE a non-exclusive,
	non-transferable right to access and use the PROGRAM
	internally for the sole purpose of assessing Tigress
	virtualization software and subject to the terms and
	conditions of this Agreement.

II. LIMITATION OF LICENSE AND RESTRICTIONS A. Except as expressly
permitted by this agreement, no other use of PROGRAM is permitted,
including, but not limited to: (i) use or access for the benefit of,
on behalf of, or upon the request of any other party; (ii)
reproduction, adaptations, and/or preparation of derivative works;
(iii) sale, renting or loaning access to PROGRAM, passwords, or
usernames: or (iv) the reverse engineering, decompiling,
disassembling, or attempting to otherwise access any source code for
any software program. LICENSEE covenants that the contents of PROGRAM
are for LICENSEE'S use, and may not be resold, republished, or
otherwise distributed to third parties in any form including, but not
limited to, via an internet, intranet, or extranet site.

B. LICENSEE shall not assign this Agreement, and any attempt by
LICENSEE to assign it shall be void from the beginning.  LICENSEE
agrees to secure and protect access to PROGRAM in a manner consistent
with the maintenance of ARIZONA'S rights in PROGRAM and to take
appropriate action by instruction or agreement with its and LICENSEE’S
employees who are permitted access to PROGRAM in order to satisfy
LICENSEE'S obligations under this Agreement.

III. TITLE AND OWNERSHIP No ownership rights of ARIZONA in the PROGRAM
	are conferred upon LICENSEE by this Agreement.

IV. DISCLAIMER OF WARRANTY AND LIMITATION OF LIABILITY A. PROGRAM IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR
IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE OR ANY WARRANTY
THAT THE PROGRAM DOES NOT INFRINGE ANY THIRD PARTY RIGHTS.  ARIZONA
DOES NOT WARRANT THAT THE DATA AND FUNCTIONS CONTAINED IN PROGRAM ARE
COMPLETE, ACCURATE OR ERROR-FREE; THAT THEY WILL MEET LICENSEE'S
REQUIREMENTS; OR THAT OPERATION WILL BE UNINTERRUPTED OR ERROR FREE.
ARIZONA shall not be liable for special, indirect, incidental, or
consequential damages with respect to any claim on account of or
arising from this Agreement or use of PROGRAM, even if ARIZONA has
been or is hereafter advised of the possibility of such damages.
Because some states do not allow certain exclusions or limitations on
implied warranties or of liability for consequential or incidental
damages, the above exclusions may not apply to LICENSEE.  In no event,
however, will ARIZONA be liable to LICENSEE, under any theory of
recovery, in an amount in excess of the license fee paid by LICENSEE
under this Agreement.

B. LICENSEE agrees that ARIZONA has no obligation to provide to
LICENSEE any maintenance, support, or update services. Should ARIZONA
provide access to and use of any revised versions of PROGRAM, LICENSEE
agrees that this Agreement shall apply to such revised versions.

C. Without limiting in anyway any of ARIZONA'S disclaimers of warranty
and limitations of liability, LICENSEE covenants that it will
carefully review any documentation or instructional material provided
by ARIZONA and acknowledges that it is aware that PROGRAM is intended
to be an educational tool.

D. For clarity, LICENSEE acknowledges THAT ARIZONA SHALL NOT BE LIABLE
FOR ANY LOSS OF DATA CONTAINED OR ENTERED IN THE PROGRAM OR ANY
DAMAGES OR COSTS ASSOCIATED WITH THAT LOSS.

V. TERM AND TERMINATION A. If LICENSEE at any time fails to abide by
the terms of this Agreement, ARIZONA shall have the right to
immediately terminate the license granted herein, require the return
or destruction of all copies of the PROGRAM from LICENSEE and
certification in writing as to such return or destruction, and pursue
any other legal or equitable remedies available.

B. This Agreement is renewable upon the written agreement of both
parties, which may be accomplished by LICENSEE's renewal request to
ARIZONA.

VI.  MISCELLANEOUS A. This Agreement shall be interpreted pursuant to
the laws of the State of ARIZONA. Any arbitration or litigation
between the Parties shall be conducted in Pima County, ARIZONA, and
Company hereby submits to venue and jurisdiction in Pima County,
ARIZONA.

B. The parties agree that should a dispute arise between them
concerning this Agreement and no party seeks affirmative relief other
than money damages in the amount of Fifty Thousand Dollars ($50,000)
or less, exclusive of interest, costs and attorneys' fees, the parties
may be required submit the matter to arbitration pursuant to the
Revised Uniform Arbitration Act, A.R.S §12-3001 et seq. (the “Act”),
whose rules shall govern the interpretation, enforcement, and
proceedings pursuant to this section. Except as otherwise provided in
the Act, the decision of the arbitrator(s) shall be final and binding
upon the parties.  C. The Parties agree to be bound by state and
federal laws and regulations governing equal opportunity and
non-discrimination and immigration.  D. THIS AGREEMENT REPRESENTS THE
COMPLETE AND EXCLUSIVE STATEMENT OF THE AGREEMENT BETWEEN ARIZONA AND
LICENSEE AND SUPERSEDES ALL PRIOR AGREEMENTS, PROPOSALS,
REPRESENTATIONS AND OTHER COMMUNICATIONS, VERBAL OR WRITTEN, BETWEEN
THEM WITH RESPECT TO USE OF THE PROGRAM.  THIS AGREEMENT MAY BE
MODIFIED ONLY WITH THE MUTUAL WRITTEN APPROVAL OF AUTHORIZED
REPRESENTATIVES OF THE PARTIES.

E. The terms and conditions of this Agreement shall prevail
notwithstanding any different, conflicting, or additional terms or
conditions which may appear in any purchase order or other document
submitted by LICENSEE.  LICENSEE agrees that such additional or
inconsistent terms are deemed rejected by ARIZONA.

F. Unless otherwise exempt therefrom, LICENSEE agrees that it will be
responsible for any sales, use or excise taxes imposed by any
governmental unit in this transaction except income taxes.

G. LICENSEE acknowledges that the PROGRAM is of United States
origin. Licensee agrees to comply with all applicable international
and national laws that apply to the PROGRAM, including the United
States Export Administration Regulations, as well as end-user,
end-use, and destination restrictions issued by the United States.

VII. - STATE OF ARIZONA REQUIRED CLAUSES

The PARTIES will comply with their applicable state and federal
statutes and regulations governing equal employment opportunity,
nondiscrimination, and immigration.  Pursuant to the provisions of
A.R.S. §38-511, the Arizona Board of Regents may cancel this Agreement
by written notice if any person substantially involved in obtaining,
drafting, or procuring this Agreement for or on behalf of the Arizona
Board of Regents becomes an employee or consultant in any capacity of
UNIVERSITY.  The PARTIES recognize that performance by ARIZONA may be
dependent upon the appropriation of funds by the State Legislature of
Arizona. Should the Legislature fail to appropriate the necessary
funds, the Arizona Board of Regents may cancel its future obligations
under this Agreement without further duty or obligation. ARIZONA
agrees to notify UNIVERSITY as soon as reasonably possible after the
unavailability of such funds comes to its attention.  In the event of
a dispute hereunder that involves the sum of Fifty Thousand Dollars
($50,000) or less, in money damages only, exclusive of interest, costs
and attorneys' fees, the PARTIES will submit the matter to binding
arbitration pursuant to the Arizona Arbitration Act, ARS 12-1501 et
seq. (the "Act") whose rules shall govern the interpretation,
enforcement and proceedings pursuant to this paragraph. Except as
otherwise provided in the Arizona Arbitration Act, the decision of the
arbitrator(s) shall be final and binding upon the PARTIES.


End-of-message

   exit 0
fi

########################################################################################
# Version
########################################################################################
if [ "$1" == "--version" ] || [ "$1" == "--Version" ] || [ "$1" == "-version" ] || [ "$1" == "-Version" ]
then
cat <<End-of-message
Tigress Darwin-x86_64-3.0, revision 97, build 2019-11-27 22:45:03 -0700
End-of-message

   exit 0
fi

########################################################################################
# Apple weirdness
########################################################################################
if [ "$1" == "--bugs" ] || [ "$1" == "--Bugs" ] || [ "$1" == "-bugs" ] || [ "$1" == "-Bugs" ]
then
cat <<End-of-message
1) Do
   #include "tigress-3.0/tigress.h"
to get passed some clang-related issues (blocks).

2) Compile with 
   -fgnu89-inline -Wno-builtin-requires-header 
to get past other bugs.

3) Newer versions of glib has support for 128 bit floats. If this gives you problems,
   add 
        -D _Float128=double 
   to the command line and/or set
       #undef __HAVE_DISTINCT_FLOAT128 
    before including math.h 
End-of-message
   exit 0
fi

########################################################################################
# Options
########################################################################################
if [ "$1" == "--options" ] || [ "$1" == "--Options" ] || [ "$1" == "-options" ] || [ "$1" == "-Options" ]
then
cat <<End-of-message
End-of-message

   exit 0
fi

########################################################################################
# Install
########################################################################################
if [ "$1" == "--install" ] || [ "$1" == "--Install" ] || [ "$1" == "-install" ] || [ "$1" == "-Install" ]
then
cat <<"End-of-message"
Set the TIGRESS_HOME environment variable to the directory in which the tigress binary resides.
Also put this directory on your PATH, where "VERSION" is the version of tigress you want to run,
such as 3.0.
In the C-shell, you can do
   > setenv TIGRESS_HOME /PATH_TO/tigress/VERSION
   > setenv PATH /PATH_TO/tigress/VERSION:$PATH
You can put these in your .cshrc file.

In the Bourne shell, you can do the following, or put these in your .bashrc file.
   > export TIGRESS_HOME=/PATH_TO/tigress/VERSION  
   > export PATH=$PATH:/PATH_TO/tigress/VERSION
End-of-message

   exit 0
fi

########################################################################################
# Testing
########################################################################################
if [ "$1" == "--test" ] || [ "$1" == "--Test" ] || [ "$1" == "-test" ] || [ "$1" == "-Test" ]
then
cat <<"End-of-message"
Tigress comes with a suite of simple test cases that you can run to ensure
proper installation on your platform:
   > cd $TIGRESS_HOME
   > unzip simple-tests.zip
   > cd simple
   > make
Please report if any tests fail on your system.
End-of-message

   exit 0
fi

########################################################################################
# Generate random operators for the jitter.
########################################################################################
opcodes=(JIT_ADD JIT_ADDC JIT_ADDX JIT_ALLOCA JIT_AND JIT_BEQ JIT_BGE JIT_BGT JIT_BLE JIT_BLT JIT_BMC JIT_BMS JIT_BNE JIT_BOADD JIT_BOSUB JIT_BNOADD JIT_BNOSUB JIT_CALL JIT_CEIL JIT_CODESTART JIT_DECL_ARG JIT_DIV JIT_EQ JIT_EXT JIT_FADD JIT_FBEQ JIT_FBGE JIT_FBGT JIT_FBLE JIT_FBLT JIT_FBNE JIT_FDIV JIT_FLD JIT_FLDX JIT_FLOOR JIT_FMOV JIT_FMUL JIT_FNEG JIT_FPUTARG JIT_FRET JIT_FRETVAL JIT_FRSB JIT_FST JIT_FSTX JIT_FSUB JIT_GE JIT_GETARG JIT_GT JIT_HMUL JIT_JMP JIT_LABEL JIT_LD JIT_LDX JIT_LE JIT_LREG JIT_LSH JIT_LT JIT_MOD JIT_MOV JIT_MSG JIT_MUL JIT_NE JIT_NEG JIT_NOP JIT_NOT JIT_OR JIT_PATCH JIT_PREPARE JIT_PROLOG JIT_PUTARG JIT_RENAMEREG JIT_RET JIT_RETVAL JIT_ROUND JIT_RSB JIT_RSH JIT_ST JIT_STX JIT_SUB JIT_SUBC JIT_SUBX JIT_SYNCREG JIT_TRUNC JIT_UREG JIT_XOR JIT_X86_STI JIT_X86_STXI JIT_X86_ADDMUL JIT_X86_ADDIMM JIT_DATA_BYTE JIT_DATA_BYTES JIT_DATA_REF_CODE JIT_DATA_REF_DATA JIT_CODE_ALIGN JIT_REF_CODE JIT_REF_DATA JIT_FULL_SPILL JIT_COMMENT JIT_FORCE_SPILL JIT_FORCE_ASSOC JIT_TRACE JIT_MEMCPY JIT_MEMSET JIT_MARK JIT_TOUCH JIT_TRANSFER JIT_TRANSFER_CPY JIT_TRANSFER_XOR JIT_TRANSFER_AND JIT_TRANSFER_OR JIT_TRANSFER_ADD JIT_TRANSFER_ADDS JIT_TRANSFER_SUB JIT_TRANSFER_SUBS)


size=${#opcodes[*]}
max=$(( 32768 / size * size ))

for ((i=size-1; i>0; i--)); do
   while (( (rand=$RANDOM) >= max )); do :; done
   rand=$(( rand % (i+1) ))
   tmp=${opcodes[i]} opcodes[i]=${opcodes[rand]} opcodes[rand]=$tmp
done

echo "typedef enum JIT_OPCODE {" > "$TIGRESS_HOME/opcodes.c"
for ((i=0; i<size; i++)); do
   echo "   ${opcodes[i]} = $i << 3," >> "$TIGRESS_HOME/opcodes.c"
done
echo "} jit_opcode;" >> "$TIGRESS_HOME/opcodes.c"
echo "jit_opcode dummy_opcode;" >> "$TIGRESS_HOME/opcodes.c"
cat "$TIGRESS_HOME/opcodes.c" "$TIGRESS_HOME/jitter_template-i386.c" > "$TIGRESS_HOME/jitter-i386.c"
cat "$TIGRESS_HOME/opcodes.c" "$TIGRESS_HOME/jitter_template-amd64.c" > "$TIGRESS_HOME/jitter-amd64.c"
cat "$TIGRESS_HOME/opcodes.c" "$TIGRESS_HOME/jitter_template-sparc.c" > "$TIGRESS_HOME/jitter-sparc.c"
cat "$TIGRESS_HOME/opcodes.c" "$TIGRESS_HOME/jitter_template-arm32.c" > "$TIGRESS_HOME/jitter-arm32.c"

if [ "$1" == "--initjit" ]
then
   exit 0
fi

##############################################################################################
# Check that the --out=<file> option has been given; if not, we get weird error messages.
#############################################################################################

hasout=0
for x; do
  if [[ $x == "--out="* ]]; then hasout=1; break; fi
done

if [ "$hasout" = 0 ]
then
   echo "[[Tigress]] Tigress requires that you provide the --out=<file>.c argument."
   exit -1
fi

##############################################################################################
# Check that the --Environment= option has been given.
#############################################################################################

hasenv=0
for x; do
  if [[ $x == "--Environment="* ]]; then hasenv=1; break; fi
done

if [ "$hasenv" = 0 ]
then
   echo "[[Tigress]] Tigress requires that you provide the --Environment=ENV argument where ENV is one of"
   echo "[[Tigress]]    x86_64:Linux:Gcc:4.6, x86_64:Darwin:Clang:5.1, armv7:Linux:Gcc:4.6, armv8:Linux:Gcc:4.6."
   exit -1
fi

########################################################################################
# Call cilly with the appropriate options.
########################################################################################

bytecode=
for x; do
  if [ "$x" = "--bytecode" ]; then bytecode=1; break; fi
  if [ "$x" = "--ocamldebug" ]; then bytecode=1; break; fi
done

export OCAMLFIND_CONF=$bin_dir/findlib.conf

if [ -n "$bytecode" ]
then
   export CIL_FEATURES="$bin_dir/simplify.cma,$bin_dir/pta.cma,$bin_dir/oneret.cma,$bin_dir/tigress.cma"
else
   export CIL_FEATURES="$bin_dir/simplify.cmxs,$bin_dir/pta.cmxs,$bin_dir/oneret.cmxs,$bin_dir/tigress.cmxs"
fi

$bin_dir/cilly --doTigress $OPTIONS "$@"


